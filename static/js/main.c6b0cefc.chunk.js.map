{"version":3,"sources":["containers/Home.tsx","modules/counterModule.tsx","containers/Counter.tsx","containers/Copyright.tsx","containers/FooterBar.tsx","containers/SwipeableTemporaryDrawer.tsx","provider/FirebaseProvider.tsx","provider/FirebaseAuthProvider.tsx","components/SignInWithEmailAndPassword.tsx","components/CreateUserWithEmailAndPassword.tsx","components/SendPasswordResetEmail.tsx","components/SendEmailVerification.tsx","components/DeleteUser.tsx","components/Profile.tsx","components/GrowSpacer.tsx","components/HeaderBar/AppBarUser.tsx","components/HeaderBar/HeaderBar.tsx","App.tsx","serviceWorker.ts","modules/configModule.tsx","redux/reducers.ts","redux/rootState.ts","redux/store.tsx","provider/ScGlobalStyleBuilder.ts","provider/MyThemeProvider.tsx","index.tsx"],"names":["Home","withRouter","props","React","useCallback","event","history","push","Container","Typography","variant","component","gutterBottom","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","require","config","debug","initial","count","COUNTER_ACTIONS","counterModule","reducer","state","action","type","Object","assign","number","add","dispatch","getState","added","counter","Counter","stateCount","useSelector","useDispatch","addHandler","preventDefault","onClick","copy_right","CopyRight","stateCopy_right","Wrapper","styled","AppBar","FooterBar","position","color","Toolbar","ListWrapper","div","width","SwipeableTemporaryDrawer","forwardRef","ref","isOpen","useState","stateIsOpen","setStateIsOpen","useImperativeHandle","setIsOpen","useEffect","onClose","onOpen","toggleHandle","SwipeableDrawer","anchor","open","role","onKeyDown","children","FirebaseContext","undefined","FirebaseProvider","firebaseApp","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Provider","value","FirebaseAuthContext","firebaseUser","signIned","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","sendEmailVerification","delete","signOut","FirebaseAuthProvider","languageCode","firebaseAuth","setFirebaseAuth","setFirebaseUser","setSignIned","auth","onAuthStateChanged","email","password","Promise","resolve","reject","then","credential","user","catch","error","console","log","code","message","url","option","currentUser","deleteUser","SignInWithEmailAndPassword","useContext","setEmail","setPassword","emailChangeHandler","currentTarget","passwordChangeHandler","signInHandler","resetPwdHandler","TextField","label","onChange","Button","size","CreateUserWithEmailAndPassword","createInHandler","SendPasswordResetEmail","resetInHandler","SendEmailVerification","verificationHandler","useMemo","length","DeleteUser","deleteHandler","Profile","withdrawalHandler","JSON","stringify","Divider","GrowSpacer","AppBarUser","anchorEl","setAnchorEl","isMenuOpen","Boolean","signUpHandler","profileUpHandler","signOutHandler","emailVerificationHandler","displayName","Fragment","startIcon","MenuItem","HeaderBar","drawerOpenHandler","goHomeHandler","IconButton","edge","aria-label","routerBasename","router_basename","App","stateRouterBasename","drawerRef","useRef","basename","List","ListItem","button","ListItemIcon","ListItemText","primary","current","exact","path","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","nodeEnv","configModule","reducers","combineReducers","initialState","enhancers","CONFIG","__REDUX_DEVTOOLS_EXTENSION__","middlewares","reduxThunk","composedEnhancers","compose","applyMiddleware","store","createStore","GlobalFontFamily","theme","sys","ja","en","MyThemeProvider","fontType","baseFontSize","muiThemeOption","overrides","MuiCssBaseline","html","fontFamily","body","fontSize","typography","palette","ScGlobalStyle","createGlobalStyle","ScGlobalStyleBuilder","font","createMuiTheme","CssBaseline","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c6b0cefc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { Container, Typography, Button, TableContainer, Table, TableHead, TableCell, TableRow, TableBody } from '@material-ui/core'\r\n\r\ninterface iHome extends RouteComponentProps<{}> {}\r\n\r\nconst _Home:React.FC<iHome> = props => {\r\n  // const { history } = props\r\n\r\n  const jampToCounter = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      props.history.push('/counter')\r\n    },\r\n    [props.history]\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h3\" component=\"h3\" gutterBottom>概要</Typography>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        「React Firebase Provider」は、Firebase のReact WEBアプリケーションとして、以下の機能を提供します\r\n      </Typography>\r\n      <ul>\r\n        <li>Firebase アプリケーションの初期化</li>\r\n        <li>Firebase Auth の機能</li>\r\n      </ul>\r\n      <Typography variant=\"body2\" gutterBottom>\r\n        本モジュールは開発中のもので、エラーハンドリングなどほとんど未完です。\r\n      </Typography>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>機能</TableCell>\r\n              <TableCell>例</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Firebase App の初期化</TableCell>\r\n              <TableCell>自動</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>firebaseApp.auth()</TableCell>\r\n              <TableCell>const [AUTH] = React.useContext(FirebaseAuthContext)</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email/Password でのユーザー作成</TableCell>\r\n              <TableCell>[AUTH].createUserWithEmailAndPassword(email, password)</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email/Password でのログイン</TableCell>\r\n              <TableCell>[AUTH].signInWithEmailAndPassword(email, password)</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ログアウト</TableCell>\r\n              <TableCell>[AUTH].signOut()</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>パスワードリセット</TableCell>\r\n              <TableCell>[AUTH].sendPasswordResetEmail(email)</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>メール認証</TableCell>\r\n              <TableCell>[AUTH].sendEmailVerification()</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ユーザー削除</TableCell>\r\n              <TableCell>[AUTH].delete()</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ユーザー</TableCell>\r\n              <TableCell>[AUTH].firebaseUser</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>ログイン状態</TableCell>\r\n              <TableCell>[AUTH].signIned</TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Typography variant=\"h4\" component=\"h4\" gutterBottom>使い方</Typography>\r\n      <pre>\r\n        {`\r\n<FirebaseProvider>\r\n  <FirebaseAuthProvider languageCode=\"ja\">\r\n    ...\r\n  </FirebaseAuthProvider>\r\n<FirebaseProvider>\r\n        `}\r\n      </pre>\r\n      <Typography variant=\"body1\" gutterBottom>\r\n        ↑配下のコンポーネントで FirebaseAuthContext を取得し各機能を実行します\r\n      </Typography>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const Home = withRouter(_Home) ","import iRootState from \"../redux/rootState\"\r\n\r\nconst dotenv = require('dotenv')\r\ndotenv.config({ debug: true })\r\n\r\nexport interface iCounterState {\r\n    count: number\r\n}\r\n\r\nexport const initial:iCounterState = {\r\n    count: 0\r\n}\r\n\r\n/**\r\n * Reducer\r\n */\r\n\r\nconst COUNTER_ACTIONS = {\r\n  ADD: 'counter_action_add'\r\n}\r\n\r\ninterface iCounterAction {\r\n  type: string,\r\n  number: number\r\n} \r\n\r\nconst reducer = (state: iCounterState = initial, action: iCounterAction) => {\r\n    switch (action.type) {\r\n      case COUNTER_ACTIONS.ADD:\r\n        return Object.assign({}, state, {count: state.count + action.number})\r\n      \r\n      default: return state\r\n    }\r\n}\r\n\r\nconst added = (add: number):iCounterAction => {\r\n  return {\r\n    type: COUNTER_ACTIONS.ADD,\r\n    number: add\r\n  }\r\n}\r\n\r\nconst add = (add: number) => {\r\n  return (dispatch: any, getState: () => iRootState) => {\r\n    dispatch(added(add))\r\n  }\r\n}\r\n\r\n\r\nexport const counterModule = {\r\n  initial,\r\n  reducer,\r\n  action: {\r\n    add\r\n  }\r\n}\r\n","import React from 'react'\r\nimport iRootState from '../redux/rootState'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { counterModule } from '../modules/counterModule'\r\nimport { Container } from '@material-ui/core'\r\n\r\nconst count = (state: iRootState): number => state.counter.count\r\n\r\nexport const Counter:React.FC = () => {\r\n  const stateCount = useSelector(count)\r\n  const dispatch = useDispatch()\r\n\r\n  const addHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      event.preventDefault()\r\n      dispatch(counterModule.action.add(1))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      {stateCount}:<button type=\"button\" onClick={addHandler}>add</button>\r\n    </Container>\r\n  )\r\n}","import React from 'react'\r\nimport iRootState from '../redux/rootState'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst copy_right = (state: iRootState): string | undefined => state.config.copy_right\r\n\r\nexport const CopyRight:React.FC = () => {\r\n  const stateCopy_right = useSelector(copy_right)\r\n\r\n  return (\r\n    <div>\r\n      {stateCopy_right}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styled from 'styled-components' \r\nimport { CopyRight } from './Copyright'\r\n\r\nconst Wrapper = styled(AppBar)`\r\n  top: auto;\r\n  bottom: 0;\r\n`\r\n\r\nexport const FooterBar:React.FC = () => {\r\n  return (\r\n  <Wrapper position=\"fixed\" color=\"default\">\r\n    <Toolbar>\r\n      <Typography variant=\"caption\">\r\n        <CopyRight />\r\n      </Typography>\r\n    </Toolbar>\r\n  </Wrapper>\r\n  )\r\n}","import React from 'react';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport styled from 'styled-components';\r\n\r\n\r\n/**\r\n * https://material-ui.com/components/drawers/\r\n */\r\n\r\ntype iDrawerPosition = 'top' | 'left' | 'bottom' | 'right'\r\n\r\ninterface iSwipeableTemporaryDrawer {\r\n  isOpen?: boolean\r\n  position?: iDrawerPosition\r\n  children?: React.ReactNode\r\n  width?: string\r\n}\r\n\r\ninterface iListWrapper {\r\n  width: string\r\n  position: iDrawerPosition\r\n}\r\nconst ListWrapper = styled.div<iListWrapper>`\r\n  .MuiListItem-root {\r\n    ${props => (props.position === 'left' || props.position === 'right') && `width: ${props.width};`\r\n  }\r\n`\r\n\r\nconst _SwipeableTemporaryDrawer:React.RefForwardingComponent<any, iSwipeableTemporaryDrawer> = (props, ref) => {\r\n  const {\r\n    position = 'left',\r\n    isOpen = false,\r\n    width = '250px'\r\n  } = props\r\n  const [stateIsOpen, setStateIsOpen] = React.useState(isOpen) \r\n\r\n  React.useImperativeHandle(ref, () => ({\r\n    setIsOpen\r\n  }));\r\n\r\n  React.useEffect(\r\n    () => {\r\n      setIsOpen(!!props.isOpen)\r\n    },\r\n    [props.isOpen]\r\n  ) \r\n\r\n  const setIsOpen = React.useCallback(\r\n    (isOpen: boolean) => {\r\n      setStateIsOpen(isOpen)\r\n    },\r\n    []\r\n  )\r\n\r\n  const onClose = React.useCallback(\r\n    (event: React.SyntheticEvent<{}>)=> {\r\n      setStateIsOpen(false)\r\n    },\r\n    []\r\n  )\r\n\r\n  const onOpen = React.useCallback(\r\n    (event: React.SyntheticEvent<{}>)=> {\r\n      setStateIsOpen(true)\r\n    },\r\n    []\r\n  )\r\n\r\n  const toggleHandle = React.useCallback(\r\n    (event: React.MouseEvent<HTMLDivElement> | React.KeyboardEvent<HTMLDivElement>) => {\r\n      setStateIsOpen(!stateIsOpen)\r\n    },\r\n    [stateIsOpen]\r\n  )\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor={position}\r\n      open={stateIsOpen}\r\n      onClose={onClose}\r\n      onOpen={onOpen}\r\n    >\r\n      <ListWrapper\r\n        role=\"presentation\"\r\n        onClick={toggleHandle}\r\n        onKeyDown={toggleHandle}\r\n        width={width}\r\n        position={position}\r\n      >\r\n        {props.children}\r\n      </ListWrapper>\r\n    </SwipeableDrawer>\r\n  );\r\n}\r\n\r\nexport const SwipeableTemporaryDrawer = React.forwardRef(_SwipeableTemporaryDrawer);","import * as React from 'react'\r\nimport * as firebase from \"firebase/app\"\r\n// import 'firebase/database'\r\n\r\nconst dotenv = require('dotenv')\r\ndotenv.config({ debug: true })\r\n\r\ninterface FirebaseProvider {\r\n  \r\n}\r\n\r\ntype tFirebaseContext = firebase.app.App | undefined\r\n\r\nexport const FirebaseContext = React.createContext<tFirebaseContext>(undefined);\r\n\r\nexport const FirebaseProvider: React.FC<FirebaseProvider> = props => {\r\n  \r\n  const firebaseApp: firebase.app.App = React.useMemo(\r\n    () => {\r\n      const config = {\r\n        apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n        authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n        databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n        projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n        storageBucket: process.env.REACT_APP_FIREBASE_STRAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n      }\r\n      // console.log(config)\r\n      return firebase.initializeApp(config)\r\n    },\r\n    []\r\n  )\r\n\r\n  return (\r\n    <FirebaseContext.Provider value={firebaseApp}>\r\n      {props.children}\r\n    </FirebaseContext.Provider>\r\n  )\r\n} ","import * as React from 'react'\r\nimport 'firebase/auth'\r\nimport { FirebaseContext } from './FirebaseProvider'\r\n\r\nconst dotenv = require('dotenv')\r\ndotenv.config({ debug: true })\r\n\r\ninterface iFirebaseAuthProvider {\r\n  languageCode?: string\r\n}\r\n\r\ninterface iFirebaseAuthContext {\r\n  firebaseUser: firebase.User | null\r\n  signIned: boolean\r\n  createUserWithEmailAndPassword?: (email: string, password: string) => Promise<firebase.User | null>\r\n  signInWithEmailAndPassword?: (email: string, password: string) => Promise<firebase.User | null>\r\n  sendPasswordResetEmail?: (email: string, url?: string) => Promise<void>\r\n  sendEmailVerification?: (url?: string) => Promise<void>\r\n  delete?: () => Promise<void>,\r\n  signOut?: () => void\r\n}\r\n\r\nexport const FirebaseAuthContext = React.createContext<iFirebaseAuthContext>({\r\n  firebaseUser: null,\r\n  signIned: false,\r\n  createUserWithEmailAndPassword: undefined,\r\n  signInWithEmailAndPassword: undefined,\r\n  sendPasswordResetEmail: undefined,\r\n  sendEmailVerification: undefined,\r\n  delete: undefined,\r\n  signOut: undefined\r\n});\r\n\r\nexport const FirebaseAuthProvider: React.FC<iFirebaseAuthProvider> = props => {\r\n  const { languageCode = 'en' } = props\r\n  const firebaseApp = React.useContext(FirebaseContext)\r\n  const [firebaseAuth, setFirebaseAuth] = React.useState<firebase.auth.Auth | undefined>(undefined)\r\n  const [firebaseUser, setFirebaseUser] = React.useState<firebase.User | null>(null)\r\n  const [signIned, setSignIned] = React.useState<boolean>(false)\r\n\r\n  React.useEffect(\r\n    () => {\r\n      if (firebaseApp) {\r\n        const firebaseAuth = firebaseApp.auth()\r\n        firebaseAuth.languageCode = languageCode\r\n        firebaseAuth.onAuthStateChanged(\r\n          (firebaseUser: firebase.User | null) => {\r\n            setSignIned(!!firebaseUser)\r\n            setFirebaseUser(firebaseUser)\r\n          }\r\n        )\r\n        setFirebaseAuth(firebaseAuth)\r\n      }\r\n    },\r\n    [firebaseApp]\r\n  )\r\n\r\n  /* createUserWithEmailAndPassword */\r\n  const createUserWithEmailAndPassword = React.useCallback(\r\n    (email: string, password: string): Promise<firebase.User | null> => {\r\n      return new Promise((resolve, reject) => {\r\n        if (firebaseAuth) {\r\n          firebaseAuth.signOut()\r\n          firebaseAuth.createUserWithEmailAndPassword(email, password)\r\n            .then((credential: firebase.auth.UserCredential) => {\r\n              resolve(credential.user)\r\n            })\r\n            .catch((error) => {\r\n              console.log(error.code, error.message)\r\n              // auth/operation-not-allowed\r\n              // The given sign-in provider is disabled for this Fi…under the sign-in method tab of the Auth section.\r\n  \r\n              // auth/email-already-in-use\r\n              // The email address is already in use by another account.\r\n  \r\n              // auth/invalid-email\r\n              // The email address is badly formatted.\r\n  \r\n              // auth/weak-password\r\n              // The password must be 6 characters long or more.\r\n  \r\n              reject(error)\r\n            })\r\n          return\r\n        }\r\n        reject()\r\n      })\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  /** signInWithEmailAndPassword **/\r\n  const signInWithEmailAndPassword = React.useCallback(\r\n    (email: string, password: string): Promise<firebase.User | null> => {\r\n      return new Promise((resolve, reject) => {\r\n        if (firebaseAuth) {\r\n          firebaseAuth.signOut()\r\n          firebaseAuth.signInWithEmailAndPassword(email, password)\r\n            .then((credential: firebase.auth.UserCredential) => {\r\n              resolve(credential.user)\r\n            })\r\n            .catch((error) => {\r\n              console.log(error.code, error.message)\r\n              // auth/quota-exceeded\r\n              // Exceeded quota for verifying passwords.\r\n\r\n              reject(error)\r\n            })\r\n          return\r\n        }\r\n        reject()\r\n      })\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  /** sendPasswordResetEmail **/\r\n  const sendPasswordResetEmail = React.useCallback(\r\n    (email: string, url?: string): Promise<void> => {\r\n      return new Promise((resolve, reject) => {\r\n        if (firebaseAuth) {\r\n          let option: firebase.auth.ActionCodeSettings | undefined = undefined\r\n          if (url) {\r\n            option = { url }\r\n          }\r\n          firebaseAuth.sendPasswordResetEmail(email, option)\r\n            .then(() => {\r\n              resolve()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error.code, error.message)\r\n              // auth/invalid-email\r\n              // The email address is badly formatted.\r\n\r\n              // auth/user-not-found\r\n              // There is no user record corresponding to this identifier. The user may have been deleted.\r\n              reject(error)\r\n            })\r\n          return\r\n        }\r\n        reject()\r\n      })\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  const sendEmailVerification = React.useCallback(\r\n    (url?: string): Promise<void> => {\r\n      return new Promise((resolve, reject) => {\r\n        if (firebaseAuth && firebaseAuth.currentUser) {\r\n          let option: firebase.auth.ActionCodeSettings | undefined = undefined\r\n          if (url) {\r\n            option = { url }\r\n          }\r\n          firebaseAuth.currentUser.sendEmailVerification(option)\r\n            .then(() => {\r\n              resolve()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error.code, error.message)\r\n              reject(error)\r\n            })\r\n          return\r\n        }\r\n        reject()\r\n      })\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  const deleteUser = React.useCallback(\r\n    (): Promise<void> => {\r\n      return new Promise((resolve, reject) => {\r\n        if (firebaseAuth && firebaseAuth.currentUser) {\r\n          firebaseAuth.currentUser.delete()\r\n            .then(() => {\r\n              resolve()\r\n            })\r\n            .catch((error) => {\r\n              console.log(error.code, error.message)\r\n              // auth/requires-recent-login\r\n              // This operation is sensitive and requires recent authentication. Log in again before retrying this request.\r\n              reject(error)\r\n            })\r\n          return\r\n        }\r\n        reject()\r\n      })\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  const signOut = React.useCallback(\r\n    () => {\r\n      if (firebaseAuth) {\r\n        firebaseAuth.signOut()\r\n      }\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  return (\r\n    <FirebaseAuthContext.Provider value={{\r\n      firebaseUser,\r\n      signIned,\r\n      createUserWithEmailAndPassword,\r\n      signInWithEmailAndPassword,\r\n      sendPasswordResetEmail,\r\n      sendEmailVerification,\r\n      delete: deleteUser,\r\n      signOut\r\n    }}>\r\n      {props.children}\r\n    </FirebaseAuthContext.Provider>\r\n  )\r\n} ","import React from 'react'\r\nimport { FirebaseAuthContext } from '../provider/FirebaseAuthProvider'\r\nimport { Container, Typography, TextField, Button } from '@material-ui/core'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\n\r\ninterface iSignInWithEmailAndPassword extends RouteComponentProps<{}> {\r\n\r\n}\r\n\r\nconst _SignInWithEmailAndPassword:React.FC<iSignInWithEmailAndPassword> = props => {\r\n  const { history } = props\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n\r\n  const emailChangeHandler = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setEmail(event.currentTarget.value)\r\n    },\r\n    [email]\r\n  )\r\n\r\n  const passwordChangeHandler = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(event.currentTarget.value)\r\n    },\r\n    [password]\r\n  )\r\n\r\n  const signInHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      console.log(firebaseAuth, firebaseAuth.firebaseUser)\r\n      if (firebaseAuth.signInWithEmailAndPassword && !firebaseAuth.firebaseUser) {\r\n        firebaseAuth.signInWithEmailAndPassword(email, password)\r\n          .then(() => {\r\n            console.log(29)\r\n          })\r\n          .catch((error) => {\r\n            console.log(32)\r\n          })\r\n      }\r\n    },\r\n    [email, password, firebaseAuth]\r\n  )\r\n\r\n  const resetPwdHandler = React.useCallback(\r\n    () => {\r\n      history.push('/pwd-reset')\r\n    },\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\" component=\"h2\">Sign In</Typography>\r\n      <TextField label=\"Email\" type=\"email\" onChange={emailChangeHandler} value={email} variant=\"outlined\"/>\r\n      <TextField label=\"Password\" type=\"password\" onChange={passwordChangeHandler} value={password} variant=\"outlined\"/>\r\n      <Button type=\"button\" onClick={signInHandler} variant=\"outlined\" color=\"default\" size=\"large\">Sign In</Button>\r\n      <Button type=\"button\" onClick={resetPwdHandler}>Reset Password</Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const SignInWithEmailAndPassword = withRouter(_SignInWithEmailAndPassword)","import React from 'react'\r\nimport { FirebaseAuthContext } from '../provider/FirebaseAuthProvider'\r\nimport { Container, Typography, Button, TextField } from '@material-ui/core'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\n\r\ninterface iCreateUserWithEmailAndPassword extends RouteComponentProps<{}>{\r\n\r\n}\r\n\r\nconst _CreateUserWithEmailAndPassword:React.FC<iCreateUserWithEmailAndPassword> = props => {\r\n  const { history } = props\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n  const [email, setEmail] = React.useState('')\r\n  const [password, setPassword] = React.useState('')\r\n\r\n  const emailChangeHandler = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setEmail(event.currentTarget.value)\r\n    },\r\n    [email]\r\n  )\r\n\r\n  const passwordChangeHandler = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setPassword(event.currentTarget.value)\r\n    },\r\n    [password]\r\n  )\r\n\r\n  const createInHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (firebaseAuth.createUserWithEmailAndPassword) {\r\n        firebaseAuth.createUserWithEmailAndPassword(email, password)\r\n      }\r\n    },\r\n    [email, password, firebaseAuth]\r\n  )\r\n\r\n  const signInHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      history.push('/sign-in')\r\n    },\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\" component=\"h2\">Sign Up</Typography>\r\n      <TextField label=\"Email\" type=\"email\" onChange={emailChangeHandler} value={email} variant=\"outlined\"/>\r\n      <TextField label=\"Password\" type=\"password\" onChange={passwordChangeHandler} value={password} variant=\"outlined\"/>\r\n      <Button type=\"button\" onClick={createInHandler} variant=\"outlined\" color=\"default\" size=\"large\">Sign Up</Button>\r\n      <Button type=\"button\" onClick={signInHandler}>Sign In</Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const CreateUserWithEmailAndPassword = withRouter(_CreateUserWithEmailAndPassword)","import React from 'react'\r\nimport { FirebaseAuthContext } from '../provider/FirebaseAuthProvider'\r\nimport { Container, TextField, Button, Typography } from '@material-ui/core'\r\n\r\nexport const SendPasswordResetEmail:React.FC = () => {\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n  const [email, setEmail] = React.useState('')\r\n\r\n  const emailChangeHandler = React.useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setEmail(event.currentTarget.value)\r\n    },\r\n    [email]\r\n  )\r\n\r\n  const resetInHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      console.log(firebaseAuth, firebaseAuth.firebaseUser)\r\n      if (firebaseAuth.sendPasswordResetEmail && !firebaseAuth.firebaseUser) {\r\n        firebaseAuth.sendPasswordResetEmail(email)\r\n          .then(() => {\r\n            console.log(21)\r\n          })\r\n      }\r\n    },\r\n    [email, firebaseAuth]\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\" component=\"h2\">Password Reset</Typography>\r\n      <TextField label=\"Email\" type=\"email\" onChange={emailChangeHandler} value={email} variant=\"outlined\"/>\r\n      <Button type=\"button\" onClick={resetInHandler} variant=\"outlined\" color=\"default\" size=\"large\">Reset</Button>\r\n    </Container>\r\n  )\r\n}","import React from 'react'\r\nimport { FirebaseAuthContext } from '../provider/FirebaseAuthProvider'\r\nimport { Container, Typography, Button } from '@material-ui/core'\r\n\r\nexport const SendEmailVerification:React.FC = () => {\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n\r\n  const verificationHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (firebaseAuth.sendEmailVerification && firebaseAuth.signIned) {\r\n        firebaseAuth.sendEmailVerification()\r\n          .then(() => {\r\n            console.log(21)\r\n          })\r\n      }\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  const email = React.useMemo(\r\n    () => {\r\n      if (firebaseAuth?.firebaseUser?.email && firebaseAuth.firebaseUser.email.length > 0) {\r\n        return firebaseAuth.firebaseUser.email\r\n      }\r\n      return '?'\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\" component=\"h2\">Email Verification</Typography>\r\n      <Button type=\"button\" onClick={verificationHandler} variant=\"outlined\" color=\"default\" size=\"large\">Verification</Button>\r\n      {email}\r\n    </Container>\r\n  )\r\n}","import React from 'react'\r\nimport { FirebaseAuthContext } from '../provider/FirebaseAuthProvider'\r\n\r\nexport const DeleteUser:React.FC = () => {\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n\r\n  const deleteHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (firebaseAuth.delete && firebaseAuth.signIned) {\r\n        firebaseAuth.delete()\r\n          .then(() => {\r\n            console.log(21)\r\n          })\r\n      }\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={deleteHandler}>Delete</button>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react'\r\nimport { FirebaseAuthContext } from '../provider/FirebaseAuthProvider'\r\nimport { Typography, Container, Divider, Button } from '@material-ui/core'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\n\r\ninterface iProfile extends RouteComponentProps<{}>{}\r\n\r\nconst _Profile:React.FC<iProfile> = props => {\r\n  const { history } = props\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n\r\n  const withdrawalHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      if (firebaseAuth.delete) {\r\n        firebaseAuth.delete()\r\n          .then(() => {\r\n            history.push('/')\r\n          })\r\n      }\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h1\" component=\"h2\">Profile</Typography>\r\n      <pre>{JSON.stringify(firebaseAuth.firebaseUser, null, 2)}</pre>\r\n      <Divider />\r\n      <Button onClick={withdrawalHandler} color=\"default\" variant=\"outlined\">Withdrawal</Button>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const Profile = withRouter(_Profile)","import styled from 'styled-components'\r\n\r\nexport const GrowSpacer = styled.div`\r\n  flex-grow: 1;\r\n`","import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { FirebaseAuthContext } from '../../provider/FirebaseAuthProvider'\r\nimport Button from '@material-ui/core/Button';\r\nimport MeetingRoom from '@material-ui/icons/MeetingRoom';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { Divider } from '@material-ui/core';\r\n\r\ninterface iAppBarUser extends RouteComponentProps<{}>{\r\n\r\n}\r\n\r\nconst _AppBarUser: React.FC<iAppBarUser> = props => {\r\n  const { history } = props\r\n  const firebaseAuth = React.useContext(FirebaseAuthContext)\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const signInHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      history.push('/sign-in')\r\n    },\r\n    []\r\n  )\r\n\r\n  const signUpHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      history.push('/sign-up')\r\n    },\r\n    []\r\n  )\r\n\r\n  const profileUpHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLLIElement>) => {\r\n      setAnchorEl(null)\r\n      history.push('/profile')\r\n    },\r\n    []\r\n  )\r\n\r\n\r\n  const signOutHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLLIElement>) => {\r\n      if (firebaseAuth.signOut) {\r\n        setAnchorEl(null)\r\n        firebaseAuth.signOut()\r\n        history.push('/')\r\n      }\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  const emailVerificationHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLLIElement>) => {\r\n      setAnchorEl(null)\r\n      history.push('/mail-verification')\r\n    },\r\n    []\r\n  )\r\n\r\n  const displayName = React.useMemo(\r\n    () => {\r\n      console.log(firebaseAuth?.firebaseUser?.email)\r\n      if (firebaseAuth?.firebaseUser?.displayName && firebaseAuth.firebaseUser.displayName.length > 0) {\r\n        return firebaseAuth.firebaseUser.displayName\r\n      }\r\n      if (firebaseAuth?.firebaseUser?.email && firebaseAuth.firebaseUser.email.length > 0) {\r\n        return firebaseAuth.firebaseUser.email\r\n      }\r\n      return '?'\r\n    },\r\n    [firebaseAuth]\r\n  )\r\n\r\n  const handleProfileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null)\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {firebaseAuth.firebaseUser &&\r\n        <Button\r\n          startIcon={<AccountCircle />}\r\n          onClick={handleProfileMenuOpen}\r\n        >\r\n          {displayName}\r\n        </Button>\r\n      }\r\n      {!firebaseAuth.firebaseUser &&\r\n        <React.Fragment>\r\n          <Button\r\n            startIcon={<MeetingRoom />}\r\n            onClick={signInHandler}\r\n          >\r\n            Sign In\r\n          </Button>\r\n            <Button\r\n            startIcon={<MeetingRoom />}\r\n            onClick={signUpHandler}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </React.Fragment>\r\n      }\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={isMenuOpen}\r\n      >\r\n        <MenuItem onClick={profileUpHandler}>Profile</MenuItem>\r\n        <Divider />\r\n        <MenuItem onClick={emailVerificationHandler}>Email Verification</MenuItem>\r\n        <MenuItem onClick={signOutHandler}>Sign Out</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport const AppBarUser = withRouter(_AppBarUser)","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { GrowSpacer } from '../GrowSpacer';\r\nimport { AppBarUser } from './AppBarUser';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\ninterface iHeaderBar extends RouteComponentProps<{}>{\r\n  drawerOpenHandler: () => void\r\n}\r\n\r\n\r\nconst _HeaderBar:React.FC<iHeaderBar> = props => {\r\n  const { history } = props\r\n  const drawerOpenHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      props.drawerOpenHandler()\r\n    },\r\n    []\r\n  )\r\n\r\n  const goHomeHandler = React.useCallback(\r\n    (event: React.MouseEvent<HTMLDivElement>) => {\r\n      history.push('/')\r\n    },\r\n    [history]\r\n  )\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"default\">\r\n      <Toolbar>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={drawerOpenHandler}>\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <div onClick={goHomeHandler}>\r\n          <Typography variant=\"h6\">\r\n            React Firebase Provider\r\n          </Typography>\r\n        </div>\r\n        <GrowSpacer />\r\n        <AppBarUser />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport const HeaderBar = withRouter(_HeaderBar);","import React from 'react';\r\n\r\nimport { Home } from './containers/Home';\r\nimport { Counter } from './containers/Counter';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { FooterBar } from './containers/FooterBar'\r\nimport { GrowSpacer } from './components/GrowSpacer';\r\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\r\nimport { SwipeableTemporaryDrawer } from './containers/SwipeableTemporaryDrawer';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport iRootState from './redux/rootState';\r\nimport { useSelector } from 'react-redux';\r\nimport { FirebaseProvider } from './provider/FirebaseProvider';\r\nimport { FirebaseAuthProvider } from './provider/FirebaseAuthProvider';\r\n\r\nimport { SignInWithEmailAndPassword } from './components/SignInWithEmailAndPassword';\r\nimport { SignOut } from './components/SignOut';\r\nimport { CreateUserWithEmailAndPassword } from './components/CreateUserWithEmailAndPassword';\r\nimport { SendPasswordResetEmail } from './components/SendPasswordResetEmail';\r\nimport { SendEmailVerification } from './components/SendEmailVerification';\r\nimport { DeleteUser } from './components/DeleteUser';\r\nimport { AppBarUser } from './components/HeaderBar/AppBarUser';\r\nimport { Profile } from './components/Profile';\r\nimport { HeaderBar } from './components/HeaderBar/HeaderBar';\r\n\r\nconst routerBasename = (state: iRootState): string | undefined => state.config.router_basename\r\n\r\nconst App:React.FC = () => {\r\n  const stateRouterBasename = useSelector(routerBasename) || '/'\r\n  const drawerRef = React.useRef<any>()\r\n\r\n  const drawerOpenHandler = () => {\r\n    drawerRef.current && drawerRef.current.setIsOpen(true)\r\n  }\r\n\r\n  return (\r\n    <FirebaseProvider>\r\n      <FirebaseAuthProvider languageCode=\"ja\">\r\n        <BrowserRouter basename={stateRouterBasename}>\r\n          <SwipeableTemporaryDrawer ref={drawerRef} position=\"left\">\r\n            <List>\r\n              <ListItem button>\r\n                <ListItemIcon><InboxIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Inbox\" />\r\n              </ListItem>\r\n              <Divider />\r\n              <ListItem button>\r\n                <ListItemIcon><InboxIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Inbox\" />\r\n              </ListItem>\r\n            </List>\r\n          </SwipeableTemporaryDrawer>\r\n          <HeaderBar drawerOpenHandler={drawerOpenHandler}/>\r\n          <Toolbar/>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/sign-up\" component={CreateUserWithEmailAndPassword}/>\r\n            <Route exact path=\"/sign-in\" component={SignInWithEmailAndPassword}/>\r\n            <Route exact path=\"/mail-verification\" component={SendEmailVerification}/>\r\n            <Route exact path=\"/profile\" component={Profile}/>\r\n            <Route exact path=\"/pwd-reset\" component={SendPasswordResetEmail}/>\r\n            <Route exact path=\"/withdrawal\" component={DeleteUser}/>\r\n            <Route exact path=\"/counter\" component={Counter}/>\r\n          </Switch>\r\n          <Toolbar/>\r\n          <FooterBar />\r\n        </BrowserRouter>\r\n      </FirebaseAuthProvider>\r\n    </FirebaseProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const dotenv = require('dotenv')\r\ndotenv.config({ debug: true })\r\n\r\nconsole.log(4, process.env.NODE_ENV)\r\n\r\nexport interface iConfigState {\r\n    nodeEnv?: string\r\n    copy_right?: string\r\n    router_basename?: string\r\n}\r\n\r\nexport const initial:iConfigState = {\r\n    nodeEnv: process.env.NODE_ENV,\r\n    copy_right: process.env.REACT_APP_COPY_RIGHT,\r\n    router_basename: process.env.REACT_APP_ROUTER_BASENAME\r\n}\r\n\r\n/**\r\n * Reducer\r\n */\r\nconst reducer = (state: iConfigState = initial, action: any) => {\r\n    switch (action.type) {\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const configModule = {\r\n    initial,\r\n    reducer\r\n}\r\n","import { combineReducers, Reducer } from 'redux'\r\nimport { configModule } from '../modules/configModule'\r\nimport { counterModule } from '../modules/counterModule'\r\n\r\nexport const reducers = combineReducers<Reducer>({\r\n  config: configModule.reducer,\r\n  counter: counterModule.reducer\r\n})\r\n","import { configModule, iConfigState } from '../modules/configModule'\r\nimport { counterModule, iCounterState } from '../modules/counterModule'\r\n\r\nexport interface iRootState {\r\n  config: iConfigState\r\n  counter: iCounterState\r\n}\r\n\r\nexport default iRootState\r\n\r\nexport const initialState: iRootState = {\r\n  config: configModule.initial,\r\n  counter: counterModule.initial\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport { reducers } from './reducers'\r\nimport { initialState } from './rootState'\r\nimport { initial as CONFIG } from '../modules/configModule'\r\n\r\n//import { createBrowserHistory } from 'history'\r\n// export const history = createBrowserHistory()\r\n\r\n/** enhancer */\r\nconst enhancers:any[] = []\r\n\r\n/** Redux Dev Tool */\r\nif(CONFIG.nodeEnv !== 'development' && (window as any).__REDUX_DEVTOOLS_EXTENSION__){\r\n  enhancers.push((window as any).__REDUX_DEVTOOLS_EXTENSION__())\r\n}\r\n\r\n// export const history = createBrowserHistory()\r\n\r\n/** middle ware */\r\nconst middlewares = [\r\n  reduxThunk\r\n]\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middlewares),\r\n  ...enhancers\r\n)\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n  \r\nexport default store","import { createGlobalStyle } from 'styled-components'\r\nimport theme from 'styled-theming'\r\n/**\r\n * https://styled-components.com/docs/advanced#theming\r\n */\r\n\r\nconst GlobalFontFamily = theme('font', {\r\n  sys: \"'Helvetica Neue', Arial, 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', Meiryo, sans-serif\",\r\n  ja: \"'Noto Sans JP', sans-serif;\",\r\n  en: \"'Roboto', sans-serif;\",\r\n})\r\n\r\nexport const ScGlobalStyleBuilder = (baseFontSize: number) => {\r\n\r\n  return createGlobalStyle`\r\n    html {\r\n      font-size: ${baseFontSize}px;\r\n    }\r\n    body {\r\n      font-family: ${GlobalFontFamily};\r\n      font-size: 1rem;\r\n    } \r\n  `\r\n}","import React from 'react'\r\nimport { ThemeProvider as MuiThemeProvider, createMuiTheme, ThemeOptions } from '@material-ui/core/styles'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components';\r\nimport { CssBaseline } from '@material-ui/core'\r\nimport { ScGlobalStyleBuilder } from './ScGlobalStyleBuilder'\r\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\r\n\r\ntype tFontType = 'sys' | 'en' | 'ja'\r\n\r\ninterface iMyThemeProvider {\r\n  fontType?: tFontType,\r\n  baseFontSize?: number\r\n}\r\n\r\n/**\r\n * Material-UI と styled-component を併用\r\n * Global の styling について、Mui でも可能だけど SC を使う方針\r\n * @param props \r\n */\r\n\r\nexport const MyThemeProvider: React.FC<iMyThemeProvider> = props => {\r\n  const { fontType = 'sys', baseFontSize = 16 } = props\r\n\r\n  /** Material-UI Theme Option */\r\n  const muiThemeOption = React.useMemo(\r\n    () => {\r\n      /**\r\n       * https://material-ui.com/customization/palette/\r\n       */\r\n      const palette: PaletteOptions = {\r\n        type: 'dark'\r\n      }\r\n\r\n      const base: ThemeOptions = {\r\n        overrides: {\r\n          MuiCssBaseline: {\r\n            '@global': {\r\n              html: {\r\n                fontFamily: 'inherit',\r\n              },\r\n              body: {\r\n                fontSize: 'inherit'\r\n              }\r\n            }\r\n          }\r\n        },\r\n        typography: {\r\n          fontFamily: 'inherit'\r\n        },\r\n        palette\r\n      }\r\n      return base\r\n    },\r\n    []\r\n  )\r\n\r\n  /** styled-component global style */\r\n  const ScGlobalStyle = React.useMemo(\r\n    () => {\r\n      return ScGlobalStyleBuilder(baseFontSize)\r\n    },\r\n    [baseFontSize]\r\n  )\r\n\r\n  return (\r\n    <SCThemeProvider theme={{font: fontType}}>\r\n      <MuiThemeProvider theme={createMuiTheme(muiThemeOption)}>\r\n        <CssBaseline />\r\n        <ScGlobalStyle />\r\n        {props.children}\r\n      </MuiThemeProvider>\r\n     </SCThemeProvider>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nimport { MyThemeProvider } from './provider/MyThemeProvider';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <MyThemeProvider fontType=\"sys\" baseFontSize={16}>\r\n      <App />\r\n    </MyThemeProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}